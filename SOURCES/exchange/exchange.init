#!/bin/bash
#
# supv-geonode   This scripts turns supervisord on
# chkconfig:    345 83 04
# description:  supervisor is a process control utility.  It has a web based
#               xmlrpc interface as well as a few other nifty features.
#

# source function library
. /etc/rc.d/init.d/functions

set -a

PREFIX=/opt/boundless/exchange/.venv
APP=exchange:*
SUPERVISORD=$PREFIX/bin/supervisord
SUPERVISORCTL=$PREFIX/bin/supervisorctl
PIDFILE=/var/run/supervisor.pid
LOCKFILE=/var/lock/supervisor.lock
OPTIONS="-c /etc/supervisord.conf"

# unset this variable if you don't care to wait for child processes to shutdown before removing the $LOCKFILE
WAIT_FOR_SUBPROCESSES=yes

# remove this if you manage number of open files in some other fashion
ulimit -n 96000

running_pid()
{
  # Check if a given process pid's cmdline matches a given name
  pid=$1
  name=$2
  [ -z "$pid" ] && return 1
  [ ! -d /proc/$pid ] && return 1
  (cat /proc/$pid/cmdline | tr "\000" "\n"|grep -q $name) || return 1
  return 0
}

running()
{
  # Check if the process is running looking at /proc
  # (works for all users)

  # No pidfile, probably no daemon present
  [ ! -f "$PIDFILE" ] && return 1
  # Obtain the pid and check it against the binary name
  pid=`cat $PIDFILE`
  running_pid $pid $SUPERVISORD || return 1
  return 0
}

start() {
  echo "Starting supervisord: "

  if [ -e $PIDFILE ]; then
    echo "ALREADY STARTED"
    return 1
  fi

  # start supervisord with options from sysconfig (stuff like -c)
  $SUPERVISORD $OPTIONS

  RETVAL=$?
  if [ $RETVAL -eq 0 ]; then
    # show initial startup status
    $SUPERVISORCTL status $APP

    # only create the subsyslock if we created the PIDFILE
    [ -e $PIDFILE ] && touch $LOCKFILE
  else
    echo "Failed to start supervisord"
  fi
}

stop() {
  echo -n "Stopping supervisord: "
  $SUPERVISORCTL shutdown $APP
  if [ -n "$WAIT_FOR_SUBPROCESSES" ]; then
    echo "Waiting for $PIDFILE to be removed after child processes exit"
    total_sleep=1
    sleep $total_sleep
    for sleep in  2 2 2 2 4 4 4 4 8 8 8 8 last; do
      if [ ! -e $PIDFILE ] ; then
        echo "Supervisord exited as expected in $total_sleep seconds"
        break
      else
        if [[ $sleep -eq "last" ]] ; then
          echo "Supervisord still working on shutting down."
          return 1
        else
          sleep $sleep
          total_sleep=$(( $total_sleep + $sleep ))
        fi
      fi
    done
  fi

  # always remove the subsys. We might have waited a while, but just remove it at this point.
  rm -f $LOCKFILE
}


restart() {
  stop
  sleep 3
  start
}

case "$1" in
  start)
    start
    RETVAL=$?
    ;;
  stop)
    stop
    RETVAL=$?
    ;;
  restart|force-reload)
    restart
    RETVAL=$?
    ;;
  reload)
    $SUPERVISORCTL reload $APP
    RETVAL=$?
    ;;
  condrestart)
    [ -f $LOCKFILE ] && restart
    RETVAL=$?
    ;;
  status)
    my_status=`$SUPERVISORCTL status $APP`
    if [[ $my_status =~ "no such file" ]];then
      echo "Exchange is stopped"
      exit 1
    else
      echo "Exchange is running"
    fi
    ;;
  *)
  echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
esac
